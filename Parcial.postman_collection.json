{
	"info": {
		"_postman_id": "da5773a7-324d-400f-97c9-f5e0461250da",
		"name": "Parcial",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20979710",
		"_collection_link": "https://crimson-capsule-954644.postman.co/workspace/Team-Workspace~f3604726-0ff1-4f52-84c9-564a23e315a5/collection/20979710-da5773a7-324d-400f-97c9-f5e0461250da?action=share&source=collection_link&creator=20979710"
	},
	"item": [
		{
			"name": "Airline",
			"item": [
				{
					"name": "Add airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"airline_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Avianca\",\r\n    \"description\":\"Avianca S.A. es la aerolínea más grande de Colombia. Es propiedad del holding británico​ Avianca Group​.\",\r\n    \"dateFoundation\":\"1919-12-05\",\r\n    \"url\":\"https://www.avianca.com/es/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add invalid airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"   pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"Date foundation must be less than current date\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Viva\",\r\n    \"description\":\"Viva Air fue una aerolínea de ultra bajo costo​​​​ comercial de pasajeros de Colombia\",\r\n    \"dateFoundation\":\"2029-09-16\",\r\n    \"url\":\"https://www.vivaaerobus.com/es-co/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all airlines",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of airlines > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get airline not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Avianca\",\r\n    \"description\":\"Ha sido la aerolínea de bandera de Colombia​​ desde el 5 de diciembre de 1919\",\r\n    \"dateFoundation\":\"1919-12-05\",\r\n    \"url\":\"https://www.avianca.com/es/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airline not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Viva\",\r\n    \"description\":\"Ha sido la aerolínea de bandera de Colombia​​\",\r\n    \"dateFoundation\":\"2029-09-16\",\r\n    \"url\":\"https://www.vivaaerobus.com/es-co/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airline not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airline with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Airport",
			"item": [
				{
					"name": "Add airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"airport_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"El Dorado\",\r\n    \"code\":\"BOG\",\r\n    \"country\":\"Colombia\",\r\n    \"city\":\"Bogota\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add invalid airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"   pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"the code must be exactly 3 characters\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"La Nubia\",\r\n    \"code\":\"MZ\",\r\n    \"country\":\"Colombia\",\r\n    \"city\":\"Manizales\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all airports",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of airports > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/{{airport_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get airport not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"El Dorado\",\r\n    \"code\":\"BOG\",\r\n    \"country\":\"Colombia\",\r\n    \"city\":\"Bogotá\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports/{{airport_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airport not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"La Nubia\",\r\n    \"code\":\"MZ\",\r\n    \"country\":\"Colombia\",\r\n    \"city\":\"Manizales\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/{{airport_id}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airport not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airports/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AirlineAirport",
			"item": [
				{
					"name": "Add airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"airline_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Avianca\",\r\n    \"description\":\"Avianca S.A. es la aerolínea más grande de Colombia. Es propiedad del holding británico​ Avianca Group​.\",\r\n    \"dateFoundation\":\"1919-12-05\",\r\n    \"url\":\"https://www.avianca.com/es/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add airport 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"airport_id_1\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"El Dorado\",\r\n    \"code\":\"BOG\",\r\n    \"country\":\"Colombia\",\r\n    \"city\":\"Bogota\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add airport 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"airport_id_2\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"La Nubia\",\r\n    \"code\":\"MZL\",\r\n    \"country\":\"Colombia\",\r\n    \"city\":\"Manizales\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate airport to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate airport to airline no exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate all airports to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get airport to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get airport not associate to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {\r",
									"   pm.response.to.have.status(412);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports/{{airport_id_2}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get airport not exists to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airports to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\":\"{{airport_id_1}}\"\r\n    },\r\n    {\r\n        \"id\":\"{{airport_id_2}}\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update airports not associate to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\":\"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc\"\r\n    },\r\n    {\r\n        \"id\":\"{{airport_id_2}}\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airport to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airline_id}}/airports/{{airport_id_1}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id_1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete airport not exist to airline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/airlines/{{airlines}}/airports/7272fdd2-7d1d-4ccb-8343-dec11c3f38bc",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"airlines",
								"{{airlines}}",
								"airports",
								"7272fdd2-7d1d-4ccb-8343-dec11c3f38bc"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "http://localhost:3000/api/v1"
		}
	]
}